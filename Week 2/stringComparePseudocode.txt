STRING_APPEND(A,B)
	string S
	FOR i <- 1 to LENGTH(A)
		S[i] <- A[i]
	FOR j <- 1 to LENGTH(B)
		S[i+j] <- B[j]
	RETURN S

Time Complexity: O(n)

STRING_MERGE(A,B)
	string S
	bool T

	FOR i <- 1 to LENGTH(A)
		T <- false
		FOR k <- 1 to LENGTH(S)
			IF S[k] = A[i]
				T <- true
				BREAK
		if !T
			S.append(A[i])
			
	FOR j <- 1 to LENGTH(B)
		T <- false
		FOR k <- 1 to LENGTH(S)
			IF S[k] = B[j]
				T <- true
				BREAK
		if !T
			S.append(B[j])
	RETURN S

Time Complexity: O(n^2)

STRING_DIFFERENCE (A,B)
	string S
	FOR i <- 1 to LENGTH(A)
		bool t <- false
		FOR j <- 1 to LENGTH(B)
			IF A[i] = B[j]
				t <- true
				BREAK
		IF !t
			S.append(A[i])

Time Complexity: O(n^2)
